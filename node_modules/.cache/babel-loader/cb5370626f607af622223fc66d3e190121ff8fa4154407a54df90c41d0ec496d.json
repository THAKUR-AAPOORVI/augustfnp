{"ast":null,"code":"var _jsxFileName = \"D:\\\\fnpecom\\\\augustfnp-main\\\\fnpnew\\\\augustfnp\\\\src\\\\Components\\\\ScrollableCardList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Card from './Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cardsData = [{\n  id: 1,\n  title: 'Card 1',\n  imageSrc: 'image1.jpg'\n}, {\n  id: 2,\n  title: 'Card 2',\n  imageSrc: 'image2.jpg'\n}, {\n  id: 1,\n  title: 'Card 1',\n  imageSrc: 'image1.jpg'\n}, {\n  id: 2,\n  title: 'Card 2',\n  imageSrc: 'image2.jpg'\n}, {\n  id: 1,\n  title: 'Card 1',\n  imageSrc: 'image1.jpg'\n}, {\n  id: 2,\n  title: 'Card 2',\n  imageSrc: 'image2.jpg'\n}, {\n  id: 1,\n  title: 'Card 1',\n  imageSrc: 'image1.jpg'\n}, {\n  id: 2,\n  title: 'Card 2',\n  imageSrc: 'image2.jpg'\n}, {\n  id: 1,\n  title: 'Card 1',\n  imageSrc: 'image1.jpg'\n}, {\n  id: 2,\n  title: 'Card 2',\n  imageSrc: 'image2.jpg'\n}, {\n  id: 1,\n  title: 'Card 1',\n  imageSrc: 'image1.jpg'\n}, {\n  id: 2,\n  title: 'Card 2',\n  imageSrc: 'image2.jpg'\n}, {\n  id: 1,\n  title: 'Card 1',\n  imageSrc: 'image1.jpg'\n}, {\n  id: 2,\n  title: 'Card 2',\n  imageSrc: 'image2.jpg'\n}, {\n  id: 1,\n  title: 'Card 1',\n  imageSrc: 'image1.jpg'\n}, {\n  id: 2,\n  title: 'Card 2',\n  imageSrc: 'image2.jpg'\n}\n// ... Add more card data\n];\n\nconst ScrollableCardList = () => {\n  _s();\n  const [startIndex, setStartIndex] = useState(0);\n  const handleScroll = direction => {\n    const newIndex = direction === 'left' ? startIndex - 1 : startIndex + 1;\n    if (newIndex >= 0 && newIndex <= cardsData.length - 5) {\n      setStartIndex(newIndex);\n    }\n  };\n  const visibleCards = cardsData.slice(startIndex, startIndex + 5);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"scrollable-card-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-container\",\n      children: visibleCards.map(card => /*#__PURE__*/_jsxDEV(Card, {\n        title: card.title,\n        imageSrc: card.imageSrc\n      }, card.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"arrow-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleScroll('left'),\n        children: \"Left\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleScroll('right'),\n        children: \"Right\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(ScrollableCardList, \"DaYdbsNa+zwnUkI969Byy2AzmhI=\");\n_c = ScrollableCardList;\nexport default ScrollableCardList;\nvar _c;\n$RefreshReg$(_c, \"ScrollableCardList\");","map":{"version":3,"names":["React","useState","Card","jsxDEV","_jsxDEV","cardsData","id","title","imageSrc","ScrollableCardList","_s","startIndex","setStartIndex","handleScroll","direction","newIndex","length","visibleCards","slice","className","children","map","card","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["D:/fnpecom/augustfnp-main/fnpnew/augustfnp/src/Components/ScrollableCardList.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Card from './Card';\r\n\r\n\r\nconst cardsData = [\r\n  { id: 1, title: 'Card 1', imageSrc: 'image1.jpg' },\r\n  { id: 2, title: 'Card 2', imageSrc: 'image2.jpg' },\r\n  { id: 1, title: 'Card 1', imageSrc: 'image1.jpg' },\r\n  { id: 2, title: 'Card 2', imageSrc: 'image2.jpg' },\r\n  { id: 1, title: 'Card 1', imageSrc: 'image1.jpg' },\r\n  { id: 2, title: 'Card 2', imageSrc: 'image2.jpg' },\r\n  { id: 1, title: 'Card 1', imageSrc: 'image1.jpg' },\r\n  { id: 2, title: 'Card 2', imageSrc: 'image2.jpg' },\r\n  { id: 1, title: 'Card 1', imageSrc: 'image1.jpg' },\r\n  { id: 2, title: 'Card 2', imageSrc: 'image2.jpg' },\r\n  { id: 1, title: 'Card 1', imageSrc: 'image1.jpg' },\r\n  { id: 2, title: 'Card 2', imageSrc: 'image2.jpg' },\r\n  { id: 1, title: 'Card 1', imageSrc: 'image1.jpg' },\r\n  { id: 2, title: 'Card 2', imageSrc: 'image2.jpg' },\r\n  { id: 1, title: 'Card 1', imageSrc: 'image1.jpg' },\r\n  { id: 2, title: 'Card 2', imageSrc: 'image2.jpg' },\r\n  // ... Add more card data\r\n];\r\n\r\nconst ScrollableCardList = () => {\r\n  const [startIndex, setStartIndex] = useState(0);\r\n\r\n  const handleScroll = (direction) => {\r\n    const newIndex = direction === 'left' ? startIndex - 1 : startIndex + 1;\r\n    if (newIndex >= 0 && newIndex <= cardsData.length - 5) {\r\n      setStartIndex(newIndex);\r\n    }\r\n  };\r\n\r\n  const visibleCards = cardsData.slice(startIndex, startIndex + 5);\r\n\r\n  return (\r\n    <div className=\"scrollable-card-list\">\r\n      <div className=\"card-container\">\r\n        {visibleCards.map((card) => (\r\n          <Card key={card.id} title={card.title} imageSrc={card.imageSrc} />\r\n        ))}\r\n      </div>\r\n      <div className=\"arrow-buttons\">\r\n        <button onClick={() => handleScroll('left')}>Left</button>\r\n        <button onClick={() => handleScroll('right')}>Right</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ScrollableCardList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}